//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WarehouseService.StoreService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StoreService.IOrderService")]
    public interface IOrderService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/CreateOrder", ReplyAction="http://tempuri.org/IOrderService/CreateOrderResponse")]
        int CreateOrder(string title, string client, string email, string address, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/CreateOrder", ReplyAction="http://tempuri.org/IOrderService/CreateOrderResponse")]
        System.Threading.Tasks.Task<int> CreateOrderAsync(string title, string client, string email, string address, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetStock", ReplyAction="http://tempuri.org/IOrderService/GetStockResponse")]
        int GetStock(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetStock", ReplyAction="http://tempuri.org/IOrderService/GetStockResponse")]
        System.Threading.Tasks.Task<int> GetStockAsync(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/StoreSell", ReplyAction="http://tempuri.org/IOrderService/StoreSellResponse")]
        int StoreSell(string title, string client, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/StoreSell", ReplyAction="http://tempuri.org/IOrderService/StoreSellResponse")]
        System.Threading.Tasks.Task<int> StoreSellAsync(string title, string client, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/UpdateStock", ReplyAction="http://tempuri.org/IOrderService/UpdateStockResponse")]
        int UpdateStock(string title, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/UpdateStock", ReplyAction="http://tempuri.org/IOrderService/UpdateStockResponse")]
        System.Threading.Tasks.Task<int> UpdateStockAsync(string title, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/ChangeOrderState", ReplyAction="http://tempuri.org/IOrderService/ChangeOrderStateResponse")]
        int ChangeOrderState(int id, char state, string stateDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/ChangeOrderState", ReplyAction="http://tempuri.org/IOrderService/ChangeOrderStateResponse")]
        System.Threading.Tasks.Task<int> ChangeOrderStateAsync(int id, char state, string stateDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrder", ReplyAction="http://tempuri.org/IOrderService/GetOrderResponse")]
        System.Data.DataTable GetOrder(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrder", ReplyAction="http://tempuri.org/IOrderService/GetOrderResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetOrderAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetBooks", ReplyAction="http://tempuri.org/IOrderService/GetBooksResponse")]
        System.Data.DataTable GetBooks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetBooks", ReplyAction="http://tempuri.org/IOrderService/GetBooksResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetBooksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/TestMSMQ", ReplyAction="http://tempuri.org/IOrderService/TestMSMQResponse")]
        void TestMSMQ(string body);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/TestMSMQ", ReplyAction="http://tempuri.org/IOrderService/TestMSMQResponse")]
        System.Threading.Tasks.Task TestMSMQAsync(string body);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOrderServiceChannel : WarehouseService.StoreService.IOrderService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrderServiceClient : System.ServiceModel.ClientBase<WarehouseService.StoreService.IOrderService>, WarehouseService.StoreService.IOrderService {
        
        public OrderServiceClient() {
        }
        
        public OrderServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OrderServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int CreateOrder(string title, string client, string email, string address, int quantity) {
            return base.Channel.CreateOrder(title, client, email, address, quantity);
        }
        
        public System.Threading.Tasks.Task<int> CreateOrderAsync(string title, string client, string email, string address, int quantity) {
            return base.Channel.CreateOrderAsync(title, client, email, address, quantity);
        }
        
        public int GetStock(string title) {
            return base.Channel.GetStock(title);
        }
        
        public System.Threading.Tasks.Task<int> GetStockAsync(string title) {
            return base.Channel.GetStockAsync(title);
        }
        
        public int StoreSell(string title, string client, int quantity) {
            return base.Channel.StoreSell(title, client, quantity);
        }
        
        public System.Threading.Tasks.Task<int> StoreSellAsync(string title, string client, int quantity) {
            return base.Channel.StoreSellAsync(title, client, quantity);
        }
        
        public int UpdateStock(string title, int quantity) {
            return base.Channel.UpdateStock(title, quantity);
        }
        
        public System.Threading.Tasks.Task<int> UpdateStockAsync(string title, int quantity) {
            return base.Channel.UpdateStockAsync(title, quantity);
        }
        
        public int ChangeOrderState(int id, char state, string stateDate) {
            return base.Channel.ChangeOrderState(id, state, stateDate);
        }
        
        public System.Threading.Tasks.Task<int> ChangeOrderStateAsync(int id, char state, string stateDate) {
            return base.Channel.ChangeOrderStateAsync(id, state, stateDate);
        }
        
        public System.Data.DataTable GetOrder(int id) {
            return base.Channel.GetOrder(id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetOrderAsync(int id) {
            return base.Channel.GetOrderAsync(id);
        }
        
        public System.Data.DataTable GetBooks() {
            return base.Channel.GetBooks();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetBooksAsync() {
            return base.Channel.GetBooksAsync();
        }
        
        public void TestMSMQ(string body) {
            base.Channel.TestMSMQ(body);
        }
        
        public System.Threading.Tasks.Task TestMSMQAsync(string body) {
            return base.Channel.TestMSMQAsync(body);
        }
    }
}
