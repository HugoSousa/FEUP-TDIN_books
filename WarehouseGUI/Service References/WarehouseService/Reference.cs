//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WarehouseGUI.WarehouseService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WarehouseService.IWarehouseService")]
    public interface IWarehouseService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarehouseService/GetOpenRequests", ReplyAction="http://tempuri.org/IWarehouseService/GetOpenRequestsResponse")]
        System.Data.DataTable GetOpenRequests();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarehouseService/GetOpenRequests", ReplyAction="http://tempuri.org/IWarehouseService/GetOpenRequestsResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetOpenRequestsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarehouseService/AddRequest", ReplyAction="http://tempuri.org/IWarehouseService/AddRequestResponse")]
        int AddRequest(string title, int quantity, System.DateTime sent, System.DateTime received);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarehouseService/AddRequest", ReplyAction="http://tempuri.org/IWarehouseService/AddRequestResponse")]
        System.Threading.Tasks.Task<int> AddRequestAsync(string title, int quantity, System.DateTime sent, System.DateTime received);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarehouseService/ShipRequest", ReplyAction="http://tempuri.org/IWarehouseService/ShipRequestResponse")]
        int ShipRequest(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarehouseService/ShipRequest", ReplyAction="http://tempuri.org/IWarehouseService/ShipRequestResponse")]
        System.Threading.Tasks.Task<int> ShipRequestAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWarehouseServiceChannel : WarehouseGUI.WarehouseService.IWarehouseService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WarehouseServiceClient : System.ServiceModel.ClientBase<WarehouseGUI.WarehouseService.IWarehouseService>, WarehouseGUI.WarehouseService.IWarehouseService {
        
        public WarehouseServiceClient() {
        }
        
        public WarehouseServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WarehouseServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WarehouseServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WarehouseServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataTable GetOpenRequests() {
            return base.Channel.GetOpenRequests();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetOpenRequestsAsync() {
            return base.Channel.GetOpenRequestsAsync();
        }
        
        public int AddRequest(string title, int quantity, System.DateTime sent, System.DateTime received) {
            return base.Channel.AddRequest(title, quantity, sent, received);
        }
        
        public System.Threading.Tasks.Task<int> AddRequestAsync(string title, int quantity, System.DateTime sent, System.DateTime received) {
            return base.Channel.AddRequestAsync(title, quantity, sent, received);
        }
        
        public int ShipRequest(int id) {
            return base.Channel.ShipRequest(id);
        }
        
        public System.Threading.Tasks.Task<int> ShipRequestAsync(int id) {
            return base.Channel.ShipRequestAsync(id);
        }
    }
}
